/**
  EsJS: Lenguaje de programación con sintaxis en español basado en JavaScript.
  Donut.esjs: Un port de donut traido del js a esjs, divertido no?
*/
importar {Terminal} desde '@es-js/terminal';

mut anguloA = 0;
mut anguloB = 0;
const M = Math;

const dibujar = () => {
    mut pantalla = [];
    mut profundidad = [];

    anguloA += 0.05;
    anguloB += 0.07;

    const cosA = M.cos(anguloA);
    const sinA = M.sin(anguloA);
    const cosB = M.cos(anguloB);
    const sinB = M.sin(anguloB);

    // Inicializar buffers
    para (mut i = 0; i < 1760; i++) {
        pantalla[i] = i % 80 === 79 ? '\n' : ' ';
        profundidad[i] = 0;
    }

    para (mut theta = 0; theta < 6.28; theta += 0.07) {
        // Angulo alrededor del toro
        const cosTheta = M.cos(theta);
        const sinTheta = M.sin(theta);

        para (mut phi = 0; phi < 6.28; phi += 0.02) {
            // Ángulo alrededor del tubo
            const sinPhi = M.sin(phi);
            const cosPhi = M.cos(phi);

            const radioTubo = cosTheta + 2;
            const inversoZ = 1 / (sinPhi * radioTubo * sinA + sinTheta * cosA + 5);
            const z = sinPhi * radioTubo * cosA - sinTheta * sinA;

            const x = 40 + 30 * inversoZ * (cosPhi * radioTubo * cosB - z * sinB) | 0;
            const y = 12 + 15 * inversoZ * (cosPhi * radioTubo * sinB + z * cosB) | 0;
            const indice = x + 80 * y;

            const brillo = 8 * ((sinTheta * sinA - sinPhi * cosTheta * cosA) * cosB - sinPhi * cosTheta * sinA - sinTheta * cosA - cosPhi * cosTheta * sinB) | 0;

            si (y < 22 && y >= 0 && x >= 0 && x < 79 && inversoZ > profundidad[indice]) {
                profundidad[indice] = inversoZ;
                pantalla[indice] = '.,-~:;=!*#$@'[brillo > 0 ? brillo : 0];
            }
        }
    }

    Terminal.limpiar()
    Terminal.escribir(pantalla.juntar(""))
};

// Ejecutar animacion cada 50 ms
const intervalo = establecerIntervalo(dibujar, 50);
